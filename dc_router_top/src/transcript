# //  ModelSim SE 5.8e Aug 28 2004 Linux 2.6.18-274.3.1.el5
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# do runsim.do 
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
# Simulation Breakpoint: 1
# Break at dc_router_top_tb.v line 334
# MACRO ./runsim.do PAUSED at line 43
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module counter1
# ** Error: /user4/spring13/ms4543/E6321/Project/data_control_router_rtl/addr_calc_top/src/filt_filesize_counter.v(22): Register is illegal in left-hand side of continuous assignment
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 33
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr /user4/spring13/ms4543/E6321/Project/data_control_router_rtl/addr_calc_top/src/filt_filesize_counter.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
# Simulation Breakpoint: 1
# Break at dc_router_top_tb.v line 334
# MACRO ./runsim.do PAUSED at line 43
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# ** Error: dc_router_top.v(54): near "else":  expecting: IDENT
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# ** Error: dc_router_top.v(52): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: dc_router_top.v(56): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'ram_read_enable').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'ram_write_enable').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./runsim.do PAUSED at line 41
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# ** Error: dc_router_top.v(54): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: dc_router_top.v(58): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# ** Error: dc_router_top.v(54): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: dc_router_top.v(58): (vlog-2110) Illegal reference to net "ram_read_enable".
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
# Simulation Breakpoint: 1
# Break at dc_router_top_tb.v line 334
# MACRO ./runsim.do PAUSED at line 43
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(334)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 334
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(338)
#    Time: 10325 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 338
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(388)
#    Time: 12825 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 388
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(388)
#    Time: 12825 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 388
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(389)
#    Time: 12825 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 389
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(409)
#    Time: 13825 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 409
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(469)
#    Time: 16825 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 469

do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(485)
#    Time: 17625 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 485
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(501)
#    Time: 18425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 501
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'data_bus'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'fft_data_in'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'fir_data_in'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'iir_data_in'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'fft_data_out'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Warning: (vsim-3015) dc_router_top_tb.v(32): [PCDPC] - Port size (32 or 32) does not match connection size (128) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(561)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 561
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(562)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 562
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(562)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 562
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# ** Error: dc_router_top.v(70): near "end":  expecting: ';'
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fft_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
# Simulation Breakpoint: 1
# Break at dc_router_top_tb.v line 563
# MACRO ./runsim.do PAUSED at line 43
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fft_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fft_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# ** Error: dc_router_top.v(69): Undefined variable: fft_data_out_reg.
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Error: (vsim-3053) dc_router_top.v(49): Illegal output port connection (port 'fft_data_out').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./runsim.do PAUSED at line 41
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Error: (vsim-3053) dc_router_top.v(49): Illegal output port connection (port 'fft_data_out').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./runsim.do PAUSED at line 41
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'fir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Warning: (vsim-3015) dc_router_top.v(49): [PCDPC] - Port size (32 or 32) does not match connection size (1) for port 'iir_data_out'.
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'fir_put_req').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'fir_get_req').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'iir_put_req').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# ** Error: (vsim-3053) dc_router_top.v(48): Illegal output port connection (port 'iir_get_req').
#         Region: /dc_router_top_tb/dc_router_top/data_cntl
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./runsim.do PAUSED at line 41
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(563)
#    Time: 21425 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 563
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(567)
#    Time: 21625 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 567
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(567)
#    Time: 21625 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 567
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# ** Error: dc_router_top.v(91): Undefined variable: fir_get_req_reg.
# ** Error: dc_router_top.v(112): Undefined variable: fir_put_req_reg.
# ** Error: dc_router_top.v(124): Undefined variable: iir_get_req_reg.
# ** Error: dc_router_top.v(145): Undefined variable: iir_put_req_reg.
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# ** Error: dc_router_top.v(91): Undefined variable: fir_get_req_reg.
# ** Error: dc_router_top.v(112): Undefined variable: fir_put_req_reg.
# ** Error: dc_router_top.v(124): Undefined variable: iir_get_req_reg.
# ** Error: dc_router_top.v(145): Undefined variable: iir_put_req_reg.
# ** Error: /work/tools3/modeltech/linux/vlog failed.
# Error in macro ./runsim.do line 30
# /work/tools3/modeltech/linux/vlog failed.
#     while executing
# "vlog -incr dc_router_top.v
# "
do runsim.do
# ** Warning: (vlib-34) Library already exists at "work".
# Modifying modelsim.ini
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -work <path>       Specify library WORK
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the entity interface
#   +acc[=<spec>][+<module>[.]]
#                      Enable PLI access to objects indicated by <spec> when
#                      optimizing with -fast and +opt, where <spec> is one or more
#                      of the characters: r (registers), n (nets), b (net bits),
#                      p (ports), t (tasks and functions), s (system tasks),
#                      c (cells), and l (line debugging). Optionally, enable access
#                      for a specific <module> and its children (add trailing .)
#   -compat            Enable maximum compatability at expense of performance
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -debugCellOpt      Indicate why certain cells were not optimized
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -cover bcestx      Enable coverage metrics: branch, condition, expression,
#                      statement, and toggle or extended toggle. Statement
#                      is on by default.
#   -f <path>          Specify a file containing more command line arguments
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified entity in XML format
#   -fast[=<name>]     Perform design-wide optimization for simulator performance
#   -forcecode         Force code generation for optimized inline modules when
#                      using the -fast option
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   -keep_delta        Exclude -fast optimizations that remove delta delays
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   +mindelays         Use minimum timing from min:typ:max expressions
#   +nocheck<CODE>     Disable specified optimization check
#   -nocoverage        Disable statement coverage, which is on by default
#   -nodebug[=ports]   Do not put symbolic debugging information into the library
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells
#   -nologo            Disable startup banner
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   +nowarn<CODE>      Disable specified warning message
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   +opt+[<lib>.]<module>
#                      Generate -fast optimized code for specified
#                      pre-compiled top-level modules and their children
#   +protect           Enable use of `protect...`endprotect compiler directives
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -source            Print the source line with error messages
#   -sv                Enable System Verilog features and keywords
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -y <path>          Specify Verilog source library directory
#   -libmap_verbose    Display library map pattern matching information during compilation
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module dc_router_top_tb
# 
# Top level modules:
# 	dc_router_top_tb
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Compiling module dc_router_top
# 
# Top level modules:
# 	dc_router_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module adder32b
# 
# Top level modules:
# 	adder32b
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module filt_address_calc
# 
# Top level modules:
# 	filt_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter1
# 
# Top level modules:
# 	counter1
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module addr_calc_top
# 
# Top level modules:
# 	addr_calc_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module data_bus_controller
# 
# Top level modules:
# 	data_bus_controller
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module pla_top
# 
# Top level modules:
# 	pla_top
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module fft_out_address_calc
# 
# Top level modules:
# 	fft_out_address_calc
# Model Technology ModelSim SE vlog 5.8e Compiler 2004.08 Aug 28 2004
# -- Skipping module counter2
# 
# Top level modules:
# 	counter2
# vsim -lib work -t ps dc_router_top_tb 
# Loading work.dc_router_top_tb
# Loading work.dc_router_top
# Loading work.pla_top
# Loading work.addr_calc_top
# Loading work.filt_address_calc
# Loading work.counter1
# Loading work.adder32b
# Loading work.data_bus_controller
# ** Note: $finish    : dc_router_top_tb.v(567)
#    Time: 21625 ns  Iteration: 0  Instance: /dc_router_top_tb
# 1
# Break at dc_router_top_tb.v line 567
# Simulation Breakpoint: 1
# Break at dc_router_top_tb.v line 567
# MACRO ./runsim.do PAUSED at line 43
